<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo的学习笔记</title>
    <url>/2021/06/24/hexo%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="hexo的常见操作"><a href="#hexo的常见操作" class="headerlink" title="hexo的常见操作"></a>hexo的常见操作</h1><h2 id="本地预览博客"><a href="#本地预览博客" class="headerlink" title="本地预览博客"></a>本地预览博客</h2><p>命令行hexo s -p 端口号 就可以在浏览器上输入localhost:端口号进行本地预览。<br>如：<code>hexo s -p 5555</code>,然后在浏览器上输入<code>localhost:5555</code>对博客进行本地预览。</p>
<h2 id="在远端更新博客"><a href="#在远端更新博客" class="headerlink" title="在远端更新博客"></a>在远端更新博客</h2><p>要在远端更新博客，需要先输入<code>hexo g</code>生成静态文件，再输入<code>hexo d</code>部署之前生成的静态文件。</p>
<h2 id="新建一篇文章"><a href="#新建一篇文章" class="headerlink" title="新建一篇文章"></a>新建一篇文章</h2><p>命令行<code>hexo new page -p 文件夹名字/文章名字 “文章标题”</code>可以创建一篇新的md文档。<br>如：<code>hexo new page -p _posts/me &quot;About me&quot;</code>会在source/_posts这个目录下创建一个名字叫me.dm的文档，其文档的标题为About me。<br>但其实也可以自己在页面对应的文件夹创建一个md文件即可。</p>
<hr>
<h1 id="hexo的错误处理"><a href="#hexo的错误处理" class="headerlink" title="hexo的错误处理"></a>hexo的错误处理</h1><h2 id="error-spawn-failed…"><a href="#error-spawn-failed…" class="headerlink" title="error:spawn failed…"></a>error:spawn failed…</h2><p>解决办法：</p>
<ol>
<li>删除<code>.deploy_git</code>文件夹</li>
<li>输入<code>git config --global core.autocrlf false</code></li>
<li>然后依次执行<ul>
<li>hexo clean</li>
<li>hexo g</li>
<li>hexo d<br>简单粗暴。</li>
</ul>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>论文阅读方法</title>
    <url>/2022/03/01/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/</url>
    <content><![CDATA[<p>方法学习自b站up主“软绵绵的小熊猫”：<a class="link" href="https://www.bilibili.com/video/BV1Z541147b1">视频链接（上）<i class="fas fa-external-link-alt"></i></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="link" href="https://www.bilibili.com/video/BV14i4y187X4">视频链接（下）<i class="fas fa-external-link-alt"></i></a></p>
<h1 id="1-读书和读论文不一样"><a href="#1-读书和读论文不一样" class="headerlink" title="1. 读书和读论文不一样"></a>1. 读书和读论文不一样</h1><p>书籍或者说教材，大部分都是作者精心打磨过的，花的心血也一般都比论文多很多，信息量也很多，值得好好研读。而各大机器学习领域的论文真的很多，所以第一个就是要辨别哪些论文是需要自己仔细研读的。 </p>
<h1 id="2-论文的来源"><a href="#2-论文的来源" class="headerlink" title="2.论文的来源"></a>2.论文的来源</h1><ol>
<li><p>顶级会议：<br><br>CVPR、ICCV、ECCV：计算机视觉与模式识别会议<br><br>ICML:机器学习<br><br>NIPS:神经网络<br></p>
</li>
<li><p>Google Scholar:<br><br>可以订阅某个方向的论文，可以自动发邮箱。</p>
</li>
</ol>
<h1 id="3-论文的阅读"><a href="#3-论文的阅读" class="headerlink" title="3.论文的阅读"></a>3.论文的阅读</h1><ol>
<li><p>带着问题读文章。把自己当成一个杠精，去挑错的方式来看问题，看论文的摘要有没有我关心的问题。看到最后，看开始提出的问题有没有被解决。如果有，就是比较好的文章。</p>
</li>
<li><p>先看abstract，这时候一般就会出现一些问题，比如说文章数如何定义accuracy、efficient和generalization，以及一些不确定的概念到底是什么技术。然后看introduction的部分，看摘要的问题有没有被放大或者有一些问题得到了回答。再去读conclusion和future work，看作者自己的总结以及未来的打算。如果作者说这篇文章有比较大的贡献，比如说在数据集上有比较好的效果，才继续去读剩余部分，也就是文章最核心的部分，比如具体如何实现。这部分的问题要记下来。</p>
</li>
<li><p>每一部分的第一段和每一段的第一句话，一定要反复仔细阅读。要确保自己能明白这句话是在说什么。</p>
</li>
<li><p>如果有图像，可以先看看图像，对整个文章的思路有个比较直观的理解。</p>
</li>
<li><p>related works。因为这一部分会讲这篇论文是不是在其他论文的基础上改进的，如果是借鉴了别的文章，我就可以去看比较基础的文章，对这个方法有更基础，更底层的了解。</p>
</li>
<li><p>最后再看一下之前提出的所有问题有没有被解决，如果有些问题论文没有涉及，我需要再去看哪些文章。</p>
</li>
<li><p>一定要带着自己的思考，而不是全盘接受作者的输入，要有自己的看法。</p>
</li>
<li><p>在遇到不认识的英语单词时，利用英语阅读理解中的一些技巧：专业术语一定要记住，这能让你明白这篇文章到底是在讲什么东西；提取句子中的主谓宾结构，对于句子中一些不重要的形容词，可以适当略去。</p>
</li>
<li><p>对于数学公式，我们要做的有：归纳和总结常见的数学公式记号；对复杂的公式，要学会进行拆分。 </p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>数据挖掘学习笔记</title>
    <url>/2021/09/12/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/</url>
    <content><![CDATA[<h1 id="第一章-引言"><a href="#第一章-引言" class="headerlink" title="第一章 引言"></a>第一章 引言</h1><p>Q1：什么是自然进化？<br>Q2：数据挖掘系统与数据库系统或信息提取系统的差别是什么？</p>
<h2 id="1-1-数据挖掘出现的原因（需求），及其意义。"><a href="#1-1-数据挖掘出现的原因（需求），及其意义。" class="headerlink" title="1.1 数据挖掘出现的原因（需求），及其意义。"></a>1.1 数据挖掘出现的原因（需求），及其意义。</h2><p>数据挖掘技术出现的原因：人们需要将海量的数据转换为有用的信息和知识。</p>
<p>数据库技术的进化过程：<br><img src="/2021/09/12/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%80%E6%9C%AF%E7%9A%84%E8%BF%9B%E5%8C%96.PNG" alt="数据库技术的进化"></p>
<p>数据挖掘技术的意义：数据挖掘工具对海量的的数据进行数据分析，可以发现重要的数据模式，对商务决策、知识库、科学和医学研究做出巨大贡献。数据和信息之间的鸿沟要求系统地开发数据挖掘工具，将数据坟墓转换成知识“金块”。</p>
<h2 id="1-2-什么是数据挖掘？"><a href="#1-2-什么是数据挖掘？" class="headerlink" title="1.2 什么是数据挖掘？"></a>1.2 什么是数据挖掘？</h2><p>数据挖掘简单来说就是从大量数据中提取或“挖掘”知识，很多人也把数据挖掘视为另一个常用的术语“数据库中知识发现”。<br>数据挖掘的基础步骤如下：</p>
<ol>
<li>数据清理（消除噪音和不一致数据）</li>
<li>数据集成（多种数据源可以组合在一起）</li>
<li>数据选择（从数据库中提取与分析任务相关的数据）</li>
<li>数据变化（数据变化或统一成适合挖掘的形式；如，通过汇总或聚集操作）</li>
<li>数据挖掘（基础步骤，使用智能方法提取数据模式）</li>
<li>模式评估（根据某种兴趣度度量，识别提供知识的真正有趣的模式）</li>
<li>知识表示（使用可视化和知识表示技术，向用户提供挖掘的知识）。<br><img src="/2021/09/12/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E8%BF%87%E7%A8%8B.PNG" alt="数据挖掘过程"></li>
</ol>
<p>典型的数据挖掘系统主要成分：</p>
<ol>
<li>数据库、数据仓库或其他信息库</li>
<li>数据库或者数据仓库服务器</li>
<li>知识库</li>
<li>数据挖掘引擎</li>
<li>模式评估模块</li>
<li>图形用户界面<br><img src="/2021/09/12/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84.PNG" alt="数据挖掘系统结构"></li>
</ol>
<h2 id="1-3-数据挖掘在何种数据上进行？"><a href="#1-3-数据挖掘在何种数据上进行？" class="headerlink" title="1.3 数据挖掘在何种数据上进行？"></a>1.3 数据挖掘在何种数据上进行？</h2><h3 id="1-3-1-关系数据库"><a href="#1-3-1-关系数据库" class="headerlink" title="1.3.1 关系数据库"></a>1.3.1 关系数据库</h3><p>当下最流行，最常见的一种数据库，也是数据挖掘研究的主要数据形式，类似mysql等数据库。<br>表的集合，每个表都赋予唯一的名字。每个表包含一组属性，并通常存放大量元组（记录或行）。<br>当数据挖掘用于关系数据库时，可以进一步搜索趋势或数据模式。</p>
<h3 id="1-3-2-数据仓库"><a href="#1-3-2-数据仓库" class="headerlink" title="1.3.2 数据仓库"></a>1.3.2 数据仓库</h3><p>数据仓库是一个从多个数据源收集的信息存储，存放在一个一致的模式下，并通常驻留在单个节点。数据仓库通过数据清理、数据变换、数据集成、数据装入喝定期数据刷新构造。</p>
<p><img src="/2021/09/12/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%BB%93%E6%9E%84.PNG" alt="数据仓库结构"></p>
<p>通过提供多维数据视图和汇总数据的预计算，数据仓库非常适合联机分析处理（OLAP）。</p>
<h3 id="1-3-3-事务数据库"><a href="#1-3-3-事务数据库" class="headerlink" title="1.3.3 事务数据库"></a>1.3.3 事务数据库</h3><p>一般地，事务数据库由一个文件组成，其中每个记录代表一个事务。<br>通常，一个事物包含一个唯一的事务标识号（trans_ID)和一个组成事务的列表（如，在商店购买的商品）。</p>
<h3 id="1-3-4-高级数据库系统和高级数据库应用"><a href="#1-3-4-高级数据库系统和高级数据库应用" class="headerlink" title="1.3.4 高级数据库系统和高级数据库应用"></a>1.3.4 高级数据库系统和高级数据库应用</h3><ol>
<li>面向对象数据库</li>
<li>对象-关系数据库</li>
<li>空间数据库</li>
<li>时间数据库和时间序列数据库</li>
<li>文本数据库和多媒体数据库</li>
<li>异种数据库和遗产数据库</li>
<li>万维网</li>
</ol>
<h2 id="1-4-数据挖掘功能——可以挖掘什么类型的模式？"><a href="#1-4-数据挖掘功能——可以挖掘什么类型的模式？" class="headerlink" title="1.4 数据挖掘功能——可以挖掘什么类型的模式？"></a>1.4 数据挖掘功能——可以挖掘什么类型的模式？</h2><p>一般地，数据挖掘任务可以分成两类：描述和预测。描述性数据挖掘任务刻画数据库中数据的一般特性，预测性挖掘任务在当前数据上进行推断，以进行预测。</p>
<h3 id="1-4-1-概念-类描述：特征和区别"><a href="#1-4-1-概念-类描述：特征和区别" class="headerlink" title="1.4.1 概念/类描述：特征和区别"></a>1.4.1 概念/类描述：特征和区别</h3><p>数据可以与类与概念相关联，这些类或概念的描述称为类/概念描述。通常课通过数据特征化数据区分、数据特征化和比较。<br>数据特征是目标类数据的一般特征或特性的汇总，数据特征的输出也有很多形式，如饼图、条图、曲线、多维数据方和包括交叉表在内的多维表。</p>
<h3 id="1-4-2-关联分析"><a href="#1-4-2-关联分析" class="headerlink" title="1.4.2 关联分析"></a>1.4.2 关联分析</h3><p>关联分析发现关联规则，这些规则展示属性-值频繁地在给定数据集中一起出现地条件。关联分析广泛用于购物篮或者事务数据分析。</p>
<h3 id="1-4-3-分类与预测"><a href="#1-4-3-分类与预测" class="headerlink" title="1.4.3 分类与预测"></a>1.4.3 分类与预测</h3><p>分类是找描述或识别数据类或概念的模型（或函数），以便能够使用模型预测类标号未知的对象。<br>导出模型是基于对训练数据集（即，其类标号已知的数据对象）的分析。<br>预测与分类的不同之处在于预被预测的值是数值数据而不是类标号。<br>相关分析可能需要在分类和预测之前进行，用于识别对于分类和预测无用的属性，这些属性应当排除。</p>
<h3 id="1-4-4-聚类分析"><a href="#1-4-4-聚类分析" class="headerlink" title="1.4.4 聚类分析"></a>1.4.4 聚类分析</h3><p>聚类实际上就是指将数据分类到不同的类或者簇的一个过程，所以同一个簇中的对象有很大的相似性，而不同簇之间的对象有较大的不同。<br>聚类分析数据对象，但不考虑已知的类标号，一般再训练数据中页不提供类标号。</p>
<h3 id="1-4-5-局外者分析"><a href="#1-4-5-局外者分析" class="headerlink" title="1.4.5 局外者分析"></a>1.4.5 局外者分析</h3><p>数据库中有些数据对象与数据的一般行为或者模型不一致，因此称为局外者。<br>大部分数据挖掘方法将局外者视为噪音，但在一些类似于欺骗检测的应用中，罕见的事件可能比正规出现的那些更有趣。</p>
<h3 id="1-4-6-演变分析"><a href="#1-4-6-演变分析" class="headerlink" title="1.4.6 演变分析"></a>1.4.6 演变分析</h3><p>数据演变分析描述行为随时间变化的对象的规律或趋势，并对其建模。</p>
<h2 id="1-5-所有模式都是有趣的吗？"><a href="#1-5-所有模式都是有趣的吗？" class="headerlink" title="1.5 所有模式都是有趣的吗？"></a>1.5 所有模式都是有趣的吗？</h2><p>支持度：表示并集；置信度：表示条件概率</p>
<h2 id="1-6-数据挖掘系统的分类"><a href="#1-6-数据挖掘系统的分类" class="headerlink" title="1.6 数据挖掘系统的分类"></a>1.6 数据挖掘系统的分类</h2><ol>
<li>根据挖掘的数据库类型分类</li>
<li>根据挖掘的知识类型分类：即，根据数据挖掘的功能，如区分、关联、聚类或者局外者等等。</li>
<li>根据所用的技术分类</li>
<li>根据应用分类 </li>
</ol>
<h2 id="1-7-数据挖掘的主要问题"><a href="#1-7-数据挖掘的主要问题" class="headerlink" title="1.7 数据挖掘的主要问题"></a>1.7 数据挖掘的主要问题</h2><ol>
<li>应当在数据库中挖掘不同类型的知识。因为不同用户可能对不同类型的知识感兴趣，因此我们也要尽量挖掘出不同类型的知识以满足不同用户的需求。</li>
<li>因为很难准确地知道能够在数据库中发现什么，因此数据挖掘过程应当是交互的。</li>
<li>结合背景知识。</li>
<li>需要开发高级数据挖掘查询语言。</li>
<li>处理噪音和不完全数据。噪音和不完全数据可能会搞乱分析过程，导致数据与所构造的知识模型过分适用，因此需要处理数据噪音的数据清理方法和数据分析方法，以及发现和分析例外情况的局外者挖掘方法。</li>
<li>性能问题：包括数据挖掘算法的有效性、可规模性和并行处理。</li>
<li>由于数据类型的多样性和数据挖掘的目标不同，指望一个系统挖掘所有类型的数据是不现实的。因此，对于不同类型的数据，我们可能需要构造不同的数据挖掘系统。</li>
</ol>
<h1 id="第八章-聚类分析：基本概念和方法"><a href="#第八章-聚类分析：基本概念和方法" class="headerlink" title="第八章 聚类分析：基本概念和方法"></a>第八章 聚类分析：基本概念和方法</h1><h2 id="8-1聚类分析"><a href="#8-1聚类分析" class="headerlink" title="8.1聚类分析"></a>8.1聚类分析</h2><h3 id="8-1-1什么是聚类分析"><a href="#8-1-1什么是聚类分析" class="headerlink" title="8.1.1什么是聚类分析"></a>8.1.1什么是聚类分析</h3><p>聚类就是将数据对象分组称为多个类或簇，在同一个簇中的对象之间具有较高的相似度，而不同簇中的对象差别较大。在相同的数据集上，不同的聚类方法可能产生不同的聚类。</p>
<p>常见的聚类技术有：划分方法、层次方法、基于密度的方法、基于网格的方法和基于模型的方法。</p>
<p>在机器学习领域，分类称作监督学习，因为给定了类标号信息，即学习算法是监督的，因为它被告知训练元组的类隶属关系。聚类被称为无监督学习，因为没有提供类标号的信息。因此，聚类是通过观察学习的，而不是通过示例学习。</p>
<h3 id="8-1-2-对聚类分析的要求"><a href="#8-1-2-对聚类分析的要求" class="headerlink" title="8.1.2 对聚类分析的要求"></a>8.1.2 对聚类分析的要求</h3><ol>
<li>可伸缩性<br>这要求聚类算法不仅能在小于几百个数据对象的小数据集合上运行，也要在包含数百万甚至数十亿个数据对象的大型数据库表现良好。</li>
<li>处理不同属性类型的能力<br>许多算法是为聚类数值（基于区间）的数据设计的，但应用可能要求聚类其他类型的数据，如二元的、标称的（分类的）、序数的或者这些数据类型的混合。</li>
<li>发现任意形状的簇<br>许多聚类算法基于欧几里得或者曼哈顿距离度量来确定簇，这样的距离度量的算法趋向于发现具有相近尺寸和密度的球状簇。但是一个簇可能是任意形状的，因此我们要开发能够发现任意形状的簇的算法。</li>
<li>对于确定输入参数的领域知识的要求<br>许多聚类算法要求用户以输入参数（如希望产生的簇数）的形式提供领域知识。因此，聚类结果可能对这些参数十分敏感。通常，参数很难确定，对于高维数据集和用户尚未深入理解的数据来说更是如此。</li>
<li>处理噪声数据的能力<br>大部分数据集都包含离群点或者缺失数据等错误。一些聚类算法可能对这样的噪声敏感，从而产生低质量的聚类结果。</li>
<li>增量聚类和对输入次序不敏感<br>一些聚类算法不能将新插入的数据合并到已有的聚类结构中去，而是需要从头开始重新聚类。一些聚类算法还可能对输入数据的次序敏感。也就是说，给定数据对象集合，当以不同的次序提供数据对象时，这些算法可能生成差别很大的聚类结果。</li>
<li>聚类高维数据的能力<br>数据集可能包含大量的维或属性，发现高维空间中数据对象的簇是一个挑战，特别是考虑这样的数据可能非常稀疏，而且可能高度倾斜。</li>
<li>基于约束的聚类<br>现实世界的应用可能需要在各种约束条件下进行聚类。</li>
<li>可解释性和可用性<br> 用户希望聚类结果是可解释的、可理解的和可用的。也就是说，聚类可能需要与特定的语义解释和应用相联系。</li>
</ol>
<p><strong>比较聚类方法的诸方面</strong></p>
<ol>
<li>划分准则<br>在某些方法中，所有的对象都被划分，使得簇之间不存在层次结构。即，所有的簇都在相同的层。</li>
<li>簇的分离性<br>有些聚类方法把数据对象划分成互斥的簇。</li>
<li>相似性度量<br>有些方法用对象之间的距离确定两个对象之间的相似性，距离可以在欧氏空间、公路网、向量空间或者其他空间中定义。在其他方法中，相似性可以用基于密度的连接性或邻近性定义，并且可能不依赖两个对象之间的绝对距离。<br>相似性度量在聚类方法的设计中<strong>起重要作用</strong>。虽然基于距离的方法常常可以利用最优化技术，但是基于密度或者基于连通性的方法常常可以发现任意形状的簇。</li>
<li>聚类空间<br>对于高维数据，可能有许多不相关的属性，可能使得相似性度量不可靠。因此，在整个空间中发现的簇常常是没有意义的，最好是在相同数据集的不同子空间内搜索簇。子空间聚类发现揭示对象相似性的簇和子空间（通常是低维的）。</li>
</ol>
<h3 id="8-1-3-基本聚类方法概述"><a href="#8-1-3-基本聚类方法概述" class="headerlink" title="8.1.3 基本聚类方法概述"></a>8.1.3 基本聚类方法概述</h3><ol>
<li>划分方法<br>给定一个n个对象的集合，划分方法构建数据的k个分区，其中每个分区表示一个簇，并且k&lt;=n。也就是说，它把数据划分为k个组，使得每个组至少包含一个对象。<br>大部分划分方法是基于距离的。给定要构建的分区数k，划分方法首先创建一个初始化分。然后，采用一种迭代的重定位技术，通过把对象从一个组移动到另一个组来改进划分。<br>为了达到全局最优，基于划分的聚类可能需要穷举所有的划分，计算量极大。</li>
<li>层次方法<br>层次方法可以分为<strong>凝聚</strong>和<strong>分裂</strong>的方法。凝聚的方法，也称为自底向上的方法，开始将每个对象作为单独的一个组，然后逐次合并相近的对象或组，直到所有的组合并成一个组，或者满足某个终止条件。分裂的方法，也称为自顶向下的方法，开始将所有的对象置于一个簇中，在每次迭代中，一个簇被划分成更小的簇，直到最终每个对象在一个单独的簇中，或者满足某个终止条件。<br>层次方法的缺陷在于：一旦一个步骤（合并或分裂）完成，他就不能被撤销。</li>
<li>基于密度的方法<br>基于距离的方法只能发现球状簇，而基于密度的聚类方法能发现任意形状的簇。<br>在基于密度的方法中，对于给定簇中的每个数据点，在给定半径的领域中必须至少包含最少数目的点。这样的方法可以用来过滤噪声和离群点，发现任意形状的簇。<br>基于密度的方法可以把一个对象集划分成多个互斥的簇或者簇的分层结构。</li>
<li>基于网格的方法<br>该方法把向量空间量化为有限个单元，从而形成一个网格结构，所有的聚类操作都是在这个网格结构上进行的。<br>这样的方法的主要优点是处理速度快，其处理时间通常独立于数据对象的个数，而仅依赖于空间中每一维的单元数。</li>
</ol>
<p><img src="/2021/09/12/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E8%81%9A%E7%B1%BB%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93.PNG" alt="聚类方法总结"></p>
<h2 id="10-2-划分方法"><a href="#10-2-划分方法" class="headerlink" title="10.2 划分方法"></a>10.2 划分方法</h2><p>聚类分析最简单、最基础的版本是划分，它把对象组织成多个互斥的组或簇。</p>
<h3 id="10-2-1-k-均值：一种基于形心的技术"><a href="#10-2-1-k-均值：一种基于形心的技术" class="headerlink" title="10.2.1 k-均值：一种基于形心的技术"></a>10.2.1 k-均值：一种基于形心的技术</h3><p>基于形心的划分技术使用簇的形心代表该簇。从概念上讲，簇的形心是它的中心点，可以用该簇的对象的均值或中心点定义。<br>对象p和该簇的代表c之差用dist(p,c)度量，其中dist(x,y)代表x和y两点间的欧式距离。<br>簇C的质量可以用<strong>簇内变差</strong>度量，它是簇C中所有对象和形心c之间误差的平方和，定义为<center><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.06ex" xmlns="http://www.w3.org/2000/svg" width="21.74ex" height="6.999ex" role="img" focusable="false" viewbox="0 -1740.7 9609.1 3093.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"/></g><g data-mml-node="mo" transform="translate(1041.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="munderover" transform="translate(2097.6,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"/></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g><g data-mml-node="mi" transform="translate(537.8,1150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3708.2,0)"><g data-mml-node="munder"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"/></g><g data-mml-node="TeXAtom" transform="translate(39.6,-1115.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(503,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"/></g><g data-mml-node="mi" transform="translate(1170,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1610.7,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/></g><g data-mml-node="mi" transform="translate(520,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(865,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></g><g data-mml-node="mi" transform="translate(1334,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></g><g data-mml-node="mo" transform="translate(1695,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(2084,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(2587,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="mi" transform="translate(3031.7,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"/></g><g data-mml-node="msup" transform="translate(3464.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mn" transform="translate(422,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></g></g></svg></mjx-container></center><br>其中，E是数据集中所有对象的误差的平方和；p是空间中的点，即数据对象；而c是簇的形心。<br>k——均值算法的工作流程如下：<br>首先，在D中随机选择k个对象，每个对象代表一个簇的初始值或者中心。对于剩下的对象，根据其与各个簇中心的欧氏距离，将它们分配到最相似的簇。然后，k-均值算法迭代地改善簇内变差。<br>对于每个一个簇，它使用上次迭代分配该簇的对象，然后重新计算均值，使用更新后的均值作为新的簇中心，重新分配所有对象。迭代继续，直到分配稳定。</p>
<p><img src="/2021/09/12/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/k-%E5%9D%87%E5%80%BC%E5%88%92%E5%88%86%E7%AE%97%E6%B3%95.PNG" alt="k-均值划分算法"></p>
<p>k-均值方法不能保证收敛于全局最优解，并且它经常终止于一个局部最优解。结果可能依赖于初始簇中心的随机选择。为了得到更好的结果，通常以不同的初始簇中心，多次运行k-均值算法。</p>
<p>k-均值法的复杂度是O（nkt）,其中n是对象总数，k是簇数，t是迭代次数。对于处理大数据集，该算法是相对可伸缩和有效的。</p>
<p>仅当簇的均值有定义时才能使用k-均值方法。所以人们又发明了一种k-众数方法。k-众数方法是k-均值的一个变体，它扩展了k-均值范例，用簇众数取代簇均值来聚类标称数据。它采用新的相异性度量来处理标称对象，采用基于频率的方法来更新簇的众数。</p>
<p>要求用户必须事先给出要生成的簇数k算是该方法的一个缺点。此外，它对噪音和离群点敏感，因为少量的这类数据就能够对均值产生极大的影响。</p>
<p>提高k-均值算法的可伸缩性的方法主要有三种：</p>
<ol>
<li>在聚类时使用合适规模的样本。</li>
<li>使用过滤方法。</li>
<li>利用微聚类的思想，首先把邻近的对象划分到一些微簇中，然后对这些微簇使用k-均值方法进行聚类。</li>
</ol>
<h3 id="8-2-2-k-中心点：一种基于代表对象的技术"><a href="#8-2-2-k-中心点：一种基于代表对象的技术" class="headerlink" title="8.2.2 k-中心点：一种基于代表对象的技术"></a>8.2.2 k-中心点：一种基于代表对象的技术</h3><p>k-均值法的一个问题就是对离群点敏感。那么如何修改k-均值算法，降低它对离群点的敏感性？</p>
<p>我们可以不采用簇中对象的均值作为参照点，转而挑选实际对象来代表簇，每个簇使用一个代表对象。其余的每个对象被分配到与其最相似的对象所代表的簇中。</p>
<p>于是，划分方法基于最小化所有对象<strong>p</strong>与其对应的代表对象之间的相异性之和的原则来进行划分。确切地说，使用了一个绝对误差标准<center><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.06ex" xmlns="http://www.w3.org/2000/svg" width="20.87ex" height="6.999ex" role="img" focusable="false" viewbox="0 -1740.7 9224.6 3093.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"/></g><g data-mml-node="mo" transform="translate(1041.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="munderover" transform="translate(2097.6,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"/></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g><g data-mml-node="mi" transform="translate(537.8,1150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3708.2,0)"><g data-mml-node="munder"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"/></g><g data-mml-node="TeXAtom" transform="translate(39.6,-1115.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(503,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"/></g><g data-mml-node="mi" transform="translate(1170,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1610.7,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/></g><g data-mml-node="mi" transform="translate(520,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(865,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></g><g data-mml-node="mi" transform="translate(1334,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></g><g data-mml-node="mo" transform="translate(1695,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(2084,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(2587,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="mi" transform="translate(3031.7,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="mo" transform="translate(3516.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></g></g></svg></mjx-container></center></p>
<p>其中，E是数据集中所有对象p与C的代表对象o的绝对误差之和。k-中心点聚类通过最小化上述绝对误差，把n个对象划分到k个簇中。</p>
<p>当k=1时，我们可以在<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="5.832ex" height="2.452ex" role="img" focusable="false" viewbox="0 -833.9 2577.6 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"/></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="msup" transform="translate(1152,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(2188.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></svg></mjx-container>时间内找出准确的中位数。然而，当k是一般的正整数时，k-中心点问题是NP—困难的。</p>
<p><strong>围绕中心点划分</strong>（PAM）算法是k-中心聚类的一种流行的实现。它用迭代、贪心的方法处理该问题。与k-均值算法一样，初始代表对象（称作种子）任意选取。我们考虑用一个非代表对象替代一个代表对象是否能提高聚类质量。尝试所有可能的替换，继续用其他对象替换代表对象的迭代过程，直到聚类的质量不可能再被任何替换提高为止。质量用对象与其簇中代表对象的平均相异度的代价函数度量。</p>
<p><img src="/2021/09/12/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/PAM%E7%AE%97%E6%B3%95.PNG" alt="PAM算法"></p>
<p>当存在噪音和离群点时，k-中心点方法比k-均值更鲁棒，这是因为中心点不像均值那样容易受离群点和其他极端值影响。然而，k-中心点算法的每次迭代的复杂度是<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="16.183ex" height="2.452ex" role="img" focusable="false" viewbox="0 -833.9 7153 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"/></g><g data-mml-node="mi" transform="translate(763,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mi" transform="translate(1663,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g><g data-mml-node="mi" transform="translate(2184,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mi" transform="translate(3084,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(3906.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mi" transform="translate(4906.4,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g><g data-mml-node="msup" transform="translate(5427.4,0)"><g data-mml-node="mi"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="mn" transform="translate(933,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(6764,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></svg></mjx-container>。当n和k值较大时，这种计算开销变得相当大，远高于k-均值方法。</p>
<p>像PAM这样典型的k-中心点算法在小型数据集上运行良好，但是不能很好地用于大数据集。为了处理大数据集，可以使用一种称作CLARA（大型应用聚类）的基于抽样的方法。</p>
<p>CLARA并不考虑整个数据集合，而是使用数据集的一个随机样本，然后使用PAM方法由样本计算最佳中心点。理论上，样本应该近似地代表原数据集。在许多情况下，大样本都很有效，如果每个对象有以相同的概率被选到样本中的话，被选中的代表对象非常类似于从整个数据集选取的中心点。CLARA由多个随机样本建立聚类，并返回最佳的聚类作为输出。在一个随机样本上计算中心点的复杂度为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="17.72ex" height="2.452ex" role="img" focusable="false" viewbox="0 -833.9 7832.4 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"/></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g><g data-mml-node="msup" transform="translate(1673,0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></g><g data-mml-node="mn" transform="translate(502,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(2800.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(3801,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g><g data-mml-node="mo" transform="translate(4322,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(4711,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(5533.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mi" transform="translate(6533.4,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g><g data-mml-node="mo" transform="translate(7054.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(7443.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></svg></mjx-container>,其中，s是样本大小，k是簇数，而n是对象总数。CLARA能够处理的数据集比PAM更大。</p>
<p>CLARA的有效性依赖于样本的大小。注意，PAM在给定的数据集上搜索k个最佳中心点，而CLARA在数据集选取的样本上搜索k个最佳中心点。如果最佳的抽样中心点都远离最佳的k个中心点，则CLARA不可能发现好的聚类。如果一个对象是k个中心点之一，但是没有被抽样，则CLARA将永远不能找到最佳聚类。</p>
<p>在搜索最佳中心点时，PAM针对每个当前中心点考察数据集的每个对象，而CLARA把候选中心点仅局限在数据集的一个随机样本上。</p>
<p>一种称作CLARANS（基于随机搜索的聚类大型应用）的随机算法可以在使用样本得到聚类的开销和有效性之间权衡。首先，它在数据集中随机选择k个对象作为当前的中心点。然后，它随机地选择一个当前中心点<strong>x</strong>和一个不是当前中心点的对象<strong>y</strong>，然后用y替代下x。如果能改善绝对误差，则进行替换；如果不能，则换回来。CLARANS进行这种随机搜索l次，l步之后的中心点的集合被看作一个局部最优解。CLARANS重复以上随机过程m次，并返回最佳局部最优解作为最终的结果。</p>
<h2 id="8-3-层次方法"><a href="#8-3-层次方法" class="headerlink" title="8.3 层次方法"></a>8.3 层次方法</h2><p><strong>层次聚类方法</strong>将数据对象组成层次结构或簇的“树”。层次聚类方法主要有凝聚和分类两种，它们分别使用自底向上和自顶向下的策略把对象组织到层次结构中。</p>
<p>凝聚方法从每个对象都作为一个簇开始，迭代地合并，形成更大的簇。与此相反，分裂方法开始令所有给定的对象形成一个簇，迭代地分裂，形成较小的簇。</p>
<p>层次聚类方法可能在合并或分裂点的选择方法上遇到困难。因为一旦对象的组群被合并或被分裂，则下一步处理将在新产生的簇上进行。它不会撤销先前所做的工作，也不会在簇之间进行对象交换。因此，如果合并或分裂选择不当，则可能导致低质量的簇。此外，这些方法不具备很好的可延伸性，因为每次合并或分裂的决定都需要评估和考察许多对象和簇。</p>
<p>层次聚类方法可分为算法方法、概率方法和贝叶斯方法。凝聚、分裂和多阶段方法都是算法的，即它们都将数据对象看作确定性的，并且根据对象之间的确定的距离计算簇。概率方法使用概率模型捕获簇，并且根据模型的拟合度度量簇的质量。贝叶斯方法计算可能的聚类的分布，即它们返回给定数据上的一组聚类结构和它们的概率、条件，而不是输出数据集上的单个确定性聚类。</p>
<h3 id="10-3-1-凝聚的与分裂的层次聚类"><a href="#10-3-1-凝聚的与分裂的层次聚类" class="headerlink" title="10.3.1 凝聚的与分裂的层次聚类"></a>10.3.1 凝聚的与分裂的层次聚类</h3><p><strong>凝聚的层次聚类方法</strong>使用自底向上的策略。它从每个对象形成自己的簇开始，并且迭代地把簇合并成越来越大的簇，直到所有对象都在一个簇中，或者满足某个终止条件。该单个簇称为层次结构的根。在合并步骤，它找出两个最接近的簇，并且合并它们。因为每次迭代合并两个簇，其中每个簇至少包含一个对象，因此凝聚方法最多需要n次迭代。</p>
<p><strong>分裂的层次聚类方法</strong>使用自顶向下的策略。它从把所有对象置于一个簇中开始，该簇是层次结构的根。然后，它把根上的簇分成多个较小的子簇，并且递归地把这些簇划分成更小的簇。划分过程继续，直到最底层的簇都足够凝聚或者仅包含一个对象，或者簇内的对象都彼此充分相似。</p>
<p>在凝聚和分裂聚类中，用户都可以指定期望的簇的个数作为终止条件。</p>
<h4 id="凝聚的层次聚类算法AGNES"><a href="#凝聚的层次聚类算法AGNES" class="headerlink" title="凝聚的层次聚类算法AGNES"></a>凝聚的层次聚类算法AGNES</h4><p>层次聚类算法AGNES将每个对象自成一簇，然后这些簇根据某种准测逐步合并的。</p>
<h4 id="分裂的层次聚类算法DIANA"><a href="#分裂的层次聚类算法DIANA" class="headerlink" title="分裂的层次聚类算法DIANA"></a>分裂的层次聚类算法DIANA</h4><p>分裂方法DIANA以相反的的方法处理，所有对象形成一个初始簇，根据某种原则（如簇中最近的相邻对象的最大欧氏距离），将该簇分裂。簇的分裂过程反复进行，直到最终每个新的簇中只包含一个对象。</p>
<p><img src="/2021/09/12/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/AGNES%E5%92%8CDIANA.PNG" alt="AGNES和DIANA"></p>
<p>通常，使用一种称作树状图的树形结构来表示层次聚类的过程。它展示对象是一步步被分组聚集或划分。</p>
<p><img src="/2021/09/12/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E6%A0%91%E7%8A%B6%E5%9B%BE.PNG" alt="树状图"></p>
<h3 id="10-3-2-算法方法的距离度量"><a href="#10-3-2-算法方法的距离度量" class="headerlink" title="10.3.2 算法方法的距离度量"></a>10.3.2 算法方法的距离度量</h3><p>无论是使用凝聚方法还是使用分裂方法，一个核心问题就是度量两个簇之间的距离，其中每个簇一般是一个对象集。</p>
<p>有四种广泛使用的簇间距离度量方法，如下：</p>
<p>最小距离：<center><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.203ex" xmlns="http://www.w3.org/2000/svg" width="32.89ex" height="4.033ex" role="img" focusable="false" viewbox="0 -809 14537.6 1782.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/></g><g data-mml-node="mi" transform="translate(520,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(865,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></g><g data-mml-node="msub" transform="translate(1334,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></g><g data-mml-node="TeXAtom" transform="translate(394,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(1223,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g><g data-mml-node="mo" transform="translate(3067.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="msub" transform="translate(3456.1,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mo" transform="translate(4498,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="msub" transform="translate(4942.7,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g></g><g data-mml-node="mo" transform="translate(6032,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(6698.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="munder" transform="translate(7754.6,0)"><g data-mml-node="mo" transform="translate(943.7,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"/><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(833,0)"/><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1111,0)"/></g><g data-mml-node="TeXAtom" transform="translate(0,-665.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(503,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"/></g><g data-mml-node="msub" transform="translate(1170,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mo" transform="translate(2212,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="msup" transform="translate(2490,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(536,289) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"/></g></g><g data-mml-node="mo" transform="translate(3270.4,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"/></g><g data-mml-node="msub" transform="translate(3937.4,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(11475.7,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"/></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(1003.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="msup" transform="translate(2003.4,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(536,413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"/></g></g><g data-mml-node="mo" transform="translate(2783.9,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"/></g></g></g></g></svg></mjx-container></center></p>
<p>最大距离：<center><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.228ex" xmlns="http://www.w3.org/2000/svg" width="33.14ex" height="4.058ex" role="img" focusable="false" viewbox="0 -809 14647.9 1793.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/></g><g data-mml-node="mi" transform="translate(520,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(865,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></g><g data-mml-node="msub" transform="translate(1334,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></g><g data-mml-node="TeXAtom" transform="translate(394,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/></g><g data-mml-node="mi" transform="translate(1407,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"/></g></g></g><g data-mml-node="mo" transform="translate(3177.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="msub" transform="translate(3566.4,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mo" transform="translate(4608.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="msub" transform="translate(5053,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g></g><g data-mml-node="mo" transform="translate(6142.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(6809.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="munder" transform="translate(7864.9,0)"><g data-mml-node="mo" transform="translate(846.7,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"/><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833,0)"/><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(1333,0)"/></g><g data-mml-node="TeXAtom" transform="translate(0,-676.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(503,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"/></g><g data-mml-node="msub" transform="translate(1170,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mo" transform="translate(2212,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="msup" transform="translate(2490,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(536,289) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"/></g></g><g data-mml-node="mo" transform="translate(3270.4,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"/></g><g data-mml-node="msub" transform="translate(3937.4,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(11586,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"/></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(1003.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="msup" transform="translate(2003.4,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(536,413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"/></g></g><g data-mml-node="mo" transform="translate(2783.9,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"/></g></g></g></g></svg></mjx-container></center></p>
<p>均值距离：<center><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="28.167ex" height="2.363ex" role="img" focusable="false" viewbox="0 -750 12449.9 1044.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/></g><g data-mml-node="mi" transform="translate(520,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(865,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></g><g data-mml-node="msub" transform="translate(1334,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></g><g data-mml-node="TeXAtom" transform="translate(394,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"/></g><g data-mml-node="mi" transform="translate(1344,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/></g><g data-mml-node="mi" transform="translate(1873,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g><g data-mml-node="mo" transform="translate(3526.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="msub" transform="translate(3915.7,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mo" transform="translate(4957.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="msub" transform="translate(5402.3,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g></g><g data-mml-node="mo" transform="translate(6491.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(7158.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mo" transform="translate(8214.2,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"/></g><g data-mml-node="msub" transform="translate(8492.2,0)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(911,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mo" transform="translate(9919.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="msub" transform="translate(10919.6,0)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(911,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g></g><g data-mml-node="mo" transform="translate(12171.9,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"/></g></g></g></svg></mjx-container></center></p>
<p>平均距离：<center><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.221ex" xmlns="http://www.w3.org/2000/svg" width="38.033ex" height="6.257ex" role="img" focusable="false" viewbox="0 -1342 16810.7 2765.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/></g><g data-mml-node="mi" transform="translate(520,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(865,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></g><g data-mml-node="msub" transform="translate(1334,0)"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></g><g data-mml-node="TeXAtom" transform="translate(394,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/></g><g data-mml-node="mi" transform="translate(529,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"/></g><g data-mml-node="mi" transform="translate(1014,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g></g></g><g data-mml-node="mo" transform="translate(2832.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="msub" transform="translate(3221.3,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mo" transform="translate(4263.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="msub" transform="translate(4707.9,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g></g><g data-mml-node="mo" transform="translate(5797.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(6464,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mfrac" transform="translate(7519.8,0)"><g data-mml-node="mn" transform="translate(920.6,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(633,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="msub" transform="translate(927,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(633,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g></g></g><rect width="2101.3" height="60" x="120" y="220"/></g><g data-mml-node="munder" transform="translate(10027.7,0)"><g data-mml-node="mo" transform="translate(1055.2,0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"/></g><g data-mml-node="TeXAtom" transform="translate(0,-1115.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(503,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"/></g><g data-mml-node="msub" transform="translate(1170,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mo" transform="translate(2212,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="msup" transform="translate(2490,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(536,289) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"/></g></g><g data-mml-node="mo" transform="translate(3270.4,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"/></g><g data-mml-node="msub" transform="translate(3937.4,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g></g></g></g><g data-mml-node="mo" transform="translate(13748.8,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"/></g><g data-mml-node="mi" transform="translate(14026.8,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(14752.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="msup" transform="translate(15752.3,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(536,413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"/></g></g><g data-mml-node="mo" transform="translate(16532.7,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"/></g></g></g></svg></mjx-container></center></p>
<p>其中，|p-p’|是两个对象或点p和p’之间的距离，m<sub>i</sub>是簇C<sub>i</sub>的均值，而n<sub>i</sub>是簇C<sub>i</sub>的数目。这些度量又称为连接度量。</p>
<p>当算法使用最小距离来度量簇间距离时，有时称它为最近邻聚类算法。此外，如果当最近的两个簇之间的距离超过用户给定的阈值时，聚类过程就会终止，则称其为单连接算法。</p>
<p>如果我们把数据点看做图的结点，图中的边构成簇内结点间的路径，那么两个簇<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="2.357ex" height="1.952ex" role="img" focusable="false" viewbox="0 -705 1042 862.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>和<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="2.465ex" height="2.261ex" role="img" focusable="false" viewbox="0 -705 1089.3 999.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g></g></g></g></svg></mjx-container>和合并就对对应于在<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="2.357ex" height="1.952ex" role="img" focusable="false" viewbox="0 -705 1042 862.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>和<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="2.465ex" height="2.261ex" role="img" focusable="false" viewbox="0 -705 1089.3 999.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g></g></g></g></svg></mjx-container>的最近的一对结点之间添加一条边。由于连接簇的边总是从一个簇通向另一个簇，结果图将形成一棵树。因此，使用最小距离度量的凝聚层次聚类算法也被称为最小生成树算法，其中图的生成树是一棵连接所有结点的树，而最小生成树具有最小边权重和的生成树。</p>
<p>当一个算法使用最大距离来度量簇间距离时，有时称它为最远邻聚类算法。如果当最近的两个簇之间的最大距离超过用户给定的阈值时聚类过程便终止，则称其为全连接算法。</p>
<p>通过把数据点看作图中的结点，用边来连接结点，我们可以把每个簇看成一个完全子图，也就是说，簇中所有结点都有边来连接。两个簇之间的距离由两个簇中距离最远的结点间的距离缺点。</p>
<p>最远邻算法试图在每次迭代中尽可能少地增加簇地直径。如果真实的簇较为紧凑并且大小近似相等，则这种方法将会产生高质量的簇，否则产生的簇可能毫无意义。</p>
<p>以上最大和最小距离度量代表了簇间距离度量的两个极端。它们趋向对离群点或者噪声数据过分敏感。使用均值距离或平均距离是对最小和最大距离之间的一种折中方法，并且可以克服离群点敏感性的问题。</p>
<p>尽管均值距离计算最简单，但是平均距离也有它的优势，因为它既能处理数值数据又能处理分类数据。分类数据的均值向量可能很难计算或者根本无法定义。</p>
<h3 id="10-3-3-BIRCH-使用聚类特征的多阶段聚类"><a href="#10-3-3-BIRCH-使用聚类特征的多阶段聚类" class="headerlink" title="10.3.3 BIRCH:使用聚类特征的多阶段聚类"></a>10.3.3 BIRCH:使用聚类特征的多阶段聚类</h3><p>利用层次结构的平衡迭代归约和聚类是为大量数值数据聚类设计的，它将层次聚类（在初始微聚类阶段）与诸如迭代地划分这样的其他聚类算法（在其后地宏聚类阶段）集成在一起。它克服了凝聚类方法所面临的两个问题：（1）可伸缩性；（2）不能撤销先前步骤所做的工作。</p>
<p>BIRCH使用聚类特征来概括一个簇，使用聚类特征树（CF-树）来表示聚类的层次结构。</p>
]]></content>
  </entry>
  <entry>
    <title>网络安全期末复习</title>
    <url>/2021/07/05/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/</url>
    <content><![CDATA[<h1 id="第一讲"><a href="#第一讲" class="headerlink" title="第一讲"></a>第一讲</h1><h2 id="信息和信息安全"><a href="#信息和信息安全" class="headerlink" title="信息和信息安全"></a>信息和信息安全</h2><h3 id="信息"><a href="#信息" class="headerlink" title="信息"></a>信息</h3><p>信息是对客观世界中各种事物运动状态和变化的反映，是客观事物之间相互联系和相互作用的表征，表现的是客观事物状态和变化的本质内容。</p>
<h3 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h3><p>数据是记录信息的形式，可以用文字、数值、图像、音频和视频等多种类型的数据表示信息。</p>
<h3 id="信号"><a href="#信号" class="headerlink" title="信号"></a>信号</h3><p>信号是<strong>数据</strong>的<strong>电气</strong>或<strong>电磁</strong>表现。信号可以是<strong>模拟</strong>的，也可以是<strong>数字</strong>的。<br>模拟信息：是指时间和幅度都是连续的信号。<br>数字信号：是指时间和幅度都是离散的信号。</p>
<h3 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h3><p>安全是指不受威胁，没有危险、危害和损失。</p>
<h3 id="信息安全"><a href="#信息安全" class="headerlink" title="信息安全"></a>信息安全</h3><p>信息安全是指信息系统中的信息不会因为偶然的，或者恶意的原因而遭到破坏、更改和泄露，信息系统能够持续、不间断地提供信息服务。</p>
<h3 id="信息安全的属性（目标）"><a href="#信息安全的属性（目标）" class="headerlink" title="信息安全的属性（目标）"></a>信息安全的属性（目标）</h3><ol>
<li>保密性（机密性）</li>
<li>完整性</li>
<li>可用性</li>
<li>不可抵赖性（不可否认性）</li>
<li>可控性</li>
</ol>
<h2 id="信息安全发展过程的5个阶段"><a href="#信息安全发展过程的5个阶段" class="headerlink" title="信息安全发展过程的5个阶段"></a>信息安全发展过程的5个阶段</h2><ol>
<li>物体承载信息阶段</li>
<li>有线通信和无线通信阶段</li>
<li>计算机存储信息阶段</li>
<li>网络阶段</li>
<li>网络空间阶段</li>
</ol>
<h2 id="网络安全和网络安全问题"><a href="#网络安全和网络安全问题" class="headerlink" title="网络安全和网络安全问题"></a>网络安全和网络安全问题</h2><h3 id="网络安全"><a href="#网络安全" class="headerlink" title="网络安全"></a>网络安全</h3><p>网络安全是指网络环境下的信息系统中分布在主机、链路和转发节点的信息不受威胁，没有危险、危害和损失。信息系统能够持续正常提供服务。因此，<strong>网络安全就是网络环境中下的信息安全</strong></p>
<h3 id="网络安全问题"><a href="#网络安全问题" class="headerlink" title="网络安全问题"></a>网络安全问题</h3><p>网络安全问题是指网络环境下破坏信息可用性、保密性、完整性、不可抵赖性和可控制性等的事件。</p>
<h2 id="网络安全模型"><a href="#网络安全模型" class="headerlink" title="网络安全模型"></a>网络安全模型</h2><h3 id="含义"><a href="#含义" class="headerlink" title="含义"></a>含义</h3><p>安全模型以建模的方式清楚地描述网络安全实现过程所涉及的因素以及这些因素之间的相互关系。</p>
<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ol>
<li>以建模的方式给出解决安全问题的方法和过程。</li>
<li>清楚描述构成安全保障机制的要素和要素之间的相互关系。</li>
<li>清楚描述信息系统的行为。</li>
<li>清楚描述信息系统的运行过程。</li>
<li>清楚描述信息系统行为与保障机制之间的相互关系。<h3 id="常见模型"><a href="#常见模型" class="headerlink" title="常见模型"></a>常见模型</h3></li>
<li>P2DR安全模型。由策略、防护、检测和响应这四个要素组成的安全模型。</li>
</ol>
<h2 id="考察题型"><a href="#考察题型" class="headerlink" title="考察题型"></a>考察题型</h2><h3 id="简述网络安全和网络空间安全的关系和区别"><a href="#简述网络安全和网络空间安全的关系和区别" class="headerlink" title="简述网络安全和网络空间安全的关系和区别"></a>简述网络安全和网络空间安全的关系和区别</h3><p>答：网络安全（network security ）计算机网络环境下的信息安全。<br>网络空间安全（cyber security ）包含物理安全，网络空间，社会空间的安全。<br>网络空间安全的范围更大，他们可以相互使用，但各自的侧重点不同。<br>他们的不同之处在于网络安全所反映的安全问题基于网络，网络空间安全所反映的安全问题基于空间。网络安全相对于现实社会的信息安全而言，是基于互联网的发展以及网络社会到来所面临的信息安全新挑战所提出的概念。而网络空间安全则是基于对全球五大空间的新认知，网域与现实空间中的陆海空太空一起，共同形成了人类自然与社会以及国家的公域空间，具有全球空间的性质。</p>
<hr>
<h1 id="第二讲"><a href="#第二讲" class="headerlink" title="第二讲"></a>第二讲</h1><h2 id="网络攻击"><a href="#网络攻击" class="headerlink" title="网络攻击"></a>网络攻击</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>网络攻击指的是利用网络存在的漏洞和安全缺陷对网络中的硬件、软件及信息进行的攻击，其目的是破坏网络中信息的保密性、完整性、可用性、可控制性和不可抵赖性，削弱甚至瘫痪网络的服务功能。</p>
<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="主动攻击"><a href="#主动攻击" class="headerlink" title="主动攻击"></a>主动攻击</h4><p>主动攻击是指会改变网络中的信息、状态和信息流模式的攻击行为。主动攻击可以波坏信息的保密性、完整性和可用性等。<br>常见的主动攻击：篡改信息、欺骗攻击、拒绝服务攻击、重放攻击。</p>
<h4 id="被动攻击"><a href="#被动攻击" class="headerlink" title="被动攻击"></a>被动攻击</h4><p>被动攻击是指不会对网络传输的信息、网络状态和网络信息流模式产生影响的攻击行为。被动攻击一般只破坏信息的保密性。<br>常见的被动攻击：嗅探信息（大部分）、非法访问、数据流分析。</p>
<h2 id="嗅探攻击"><a href="#嗅探攻击" class="headerlink" title="嗅探攻击"></a>嗅探攻击</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>终端A向终端B传输信息的过程中，信息不仅沿着终端A至终端B的传输路径传输，还沿着终端A至黑客终端的传输路径传输，且终端A至黑客终端的传输路径对终端A和终端B都是<strong>透明</strong>的。</p>
<h3 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h3><ol>
<li>需要有防止黑客终端进入交换机的措施</li>
<li>交换机需要具有防御MAC表溢出攻击的机制。<h3 id="MAC表溢出攻击"><a href="#MAC表溢出攻击" class="headerlink" title="MAC表溢出攻击"></a>MAC表溢出攻击</h3>黑客终端不断发送源MAC地址变化的MAC帧，使得交换机转发表中添加这些MAC帧的转发项，这些转发项耗尽了交换机转发表的存储空间，当将还击接收到终端B发送的源MAC地址为MAC B的MAC帧时，由于转发表已经耗尽了存储空间，因此无法添加新的MAC地址为MAC B的转发项，导致交换机以广播的方式完成MAC帧终端A至终端B的传输过程。</li>
</ol>
<h2 id="截获攻击"><a href="#截获攻击" class="headerlink" title="截获攻击"></a>截获攻击</h2><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><p>黑客首先改变终端A到终端B的传输路径，将终端A至终端B的传输路径变为终端A至黑客终端在至终端B，使得终端A传输给终端B的信息必须经过黑客终端</p>
<h3 id="防御机制"><a href="#防御机制" class="headerlink" title="防御机制"></a>防御机制</h3><ol>
<li>阻止黑客终端接入以太网</li>
<li>阻止黑客终端发送的以伪造的MAC地址为源MAC地址的MAC帧进入以太网。<h3 id="MAC地址欺骗攻击"><a href="#MAC地址欺骗攻击" class="headerlink" title="MAC地址欺骗攻击"></a>MAC地址欺骗攻击</h3></li>
<li>黑客终端首先接入到其中一个通信终端接入的交换机。2.黑客终端将自己的MAC地址修改为攻击目标（终端A）的MAC地址（MAC A）。3.发送以攻击目标（终端A）为源MAC地址、以广播地址为目的MAC地址的MAC帧。</li>
</ol>
<h2 id="DHCP（动态主机配置协议）欺骗攻击"><a href="#DHCP（动态主机配置协议）欺骗攻击" class="headerlink" title="DHCP（动态主机配置协议）欺骗攻击"></a>DHCP（动态主机配置协议）欺骗攻击</h2><h3 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h3><p>黑客可以伪造一个DHCP服务器，并将其接入网络中，伪造的DHCP服务器中将黑客终端的IP地址作为默认网关地址，当终端从伪造的DHCP服务器获取错误的默认网关地址后，所有发送给其他网络的IP分组将首先发送给黑客的终端。</p>
<h3 id="防御措施-1"><a href="#防御措施-1" class="headerlink" title="防御措施"></a>防御措施</h3><p>防御DHCP欺骗攻击的关键是不允许伪造的DHCP服务器接入局域网，如以太网交换机端口只允许接受经过验证的DHCP服务器发送的DHCP提供和确认消息。</p>
<h2 id="ARP（地址解析协议）欺骗攻击"><a href="#ARP（地址解析协议）欺骗攻击" class="headerlink" title="ARP（地址解析协议）欺骗攻击"></a>ARP（地址解析协议）欺骗攻击</h2><h3 id="攻击原理"><a href="#攻击原理" class="headerlink" title="攻击原理"></a>攻击原理</h3><p>黑客终端先广播一个ARP请求报文或者ARP应答报文，然后将攻击目标的IP地址和自己的MAC地址绑定在一起，路由器接收到报文后，在缓冲区记录攻击目标的IP地址和黑客终端MAC地址的绑定项，当路由器需要转发目的地址为攻击目标的IP时，将该IP分组封装成以路由MAC为源MAC地址，黑客终端MAC地址为目的MAC地址的MAC帧，这样黑客终端就可以截获其他终端转发给攻击目标的IP分组。</p>
<h3 id="防御机制-1"><a href="#防御机制-1" class="headerlink" title="防御机制"></a>防御机制</h3><p>终端没有鉴定ARP请求和响应报文中IP地址与MAC地址绑定项真伪的功能，因此，需要以太网交换机提供鉴别ARP请求和响应报文中IP地址与MAC地址绑定项真伪的功能，以太网交换机只继续转发包含正确的IP地址与MAC地址绑定项的ARP请求和响应报文。</p>
<h2 id="Dos和DDOS攻击"><a href="#Dos和DDOS攻击" class="headerlink" title="Dos和DDOS攻击"></a>Dos和DDOS攻击</h2><h3 id="攻击原理-1"><a href="#攻击原理-1" class="headerlink" title="攻击原理"></a>攻击原理</h3><p>DOS攻击就是利用合理的服务请求来占用过多的服务资源，从而使得合法用户无法得到服务的响应。<br>DOS攻击是采用一对一的方式，而DDOS攻击是借助数百、甚至数千台被入侵后安装了攻击进程的主机同时发动的集团行为，是一种分布的、协同的大规模攻击方式。<br>一个完整的DDoS攻击体系由攻击者、主控端、代理端和攻击目标四部分组成。主控端和代理端分别用于控制和实际发起攻击，其中主控端只发布命令而不参与实际的攻击，代理端发出DDoS的实际攻击包。对于主控端和代理端的计算机，攻击者有控制权或者部分控制权．它在攻击过程中会利用各种手段隐藏自己不被别人发现。真正的攻击者一旦将攻击的命令传送到主控端，攻击者就可以关闭或离开网络．而由主控端将命令发布到各个代理主机上。这样攻击者可以逃避追踪。每一个攻击代理主机都会向目标主机发送大量的服务请求数据包，这些数据包经过伪装，无法识别它的来源，而且这些数据包所请求的服务往往要消耗大量的系统资源，造成目标主机无法为用户提供正常服务。甚至导致系统崩溃。</p>
<h3 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h3><ol>
<li>直接DDOS攻击</li>
<li>间接DDOS攻击<h3 id="防御措施-2"><a href="#防御措施-2" class="headerlink" title="防御措施"></a>防御措施</h3></li>
<li>尽可能地减少肉鸡，这就要求连接在互联网上的主机系统能够具备防御病毒和黑客入侵的能力。</li>
<li>使主机系统拒绝响应ICMP ECHO请求报文。</li>
<li>网络具有统计目的IP地址相同的ICMP ECHO响应报文，或ICMP差错报告报文数量的能力。</li>
</ol>
<hr>
<h1 id="第三讲（不做重点考察）"><a href="#第三讲（不做重点考察）" class="headerlink" title="第三讲（不做重点考察）"></a>第三讲（不做重点考察）</h1><h2 id="对称密码"><a href="#对称密码" class="headerlink" title="对称密码"></a>对称密码</h2><h2 id="非对称密码"><a href="#非对称密码" class="headerlink" title="非对称密码"></a>非对称密码</h2><hr>
<h1 id="第四讲"><a href="#第四讲" class="headerlink" title="第四讲"></a>第四讲</h1><h2 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h2><h3 id="认证（鉴别、确认）"><a href="#认证（鉴别、确认）" class="headerlink" title="认证（鉴别、确认）"></a>认证（鉴别、确认）</h3><p>认证是证实信息交换过程合法有效的一种手段，主要解决一下问题：</p>
<ol>
<li>信息的访问者是不是系统的合法用户？</li>
<li>A和B在进行信息交换时，A和B都必须对对方的身份进行认证，以保证所受到的信息是由确定的实体发送的。</li>
<li>A向B发送信息，B作为接收方，必须确定信息在A发出以后是否被修改过。</li>
<li>对收到的信息，B必须确定是过时的信息还是某种信息的重放。</li>
<li>信息接收方不能否认它所收到的消息。</li>
<li>发送方不能否认他所发送过的信息。  </li>
</ol>
<p>认证一般可以分为：</p>
<ol>
<li>身份认证</li>
<li>数字签名</li>
<li>报文认证（消息认证）</li>
</ol>
<h2 id="基本概念和特点"><a href="#基本概念和特点" class="headerlink" title="基本概念和特点"></a>基本概念和特点</h2><h3 id="报文摘要的定义"><a href="#报文摘要的定义" class="headerlink" title="报文摘要的定义"></a>报文摘要的定义</h3><p>报文摘要是指单项哈希函数算法将任意长度的输入报文经计算得出固定位的输出成为报文摘要。所谓单向是指该算法是不可逆的，找出同一报文摘要的两个不同报文时很困难的。</p>
<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ol>
<li>抗碰撞性</li>
<li>单向性</li>
<li>产生任意长度的报文</li>
<li>产生有限位数的标识信息</li>
<li>易于实现</li>
<li>具有高灵敏性</li>
</ol>
<h2 id="哈希函数特点"><a href="#哈希函数特点" class="headerlink" title="哈希函数特点"></a>哈希函数特点</h2><ol>
<li>输入可以任意长度，输出是固定长度</li>
<li>计算hash值的速度比较快</li>
<li>防碰撞性</li>
<li>单向性</li>
<li>谜题友好</li>
</ol>
<h2 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h2><ul>
<li>输入：任意长度的报文</li>
<li>输出：128位的报文摘要</li>
<li>过程：对输入按512位进行分组，并以分组为单位进行处理：<ol>
<li>填充报文</li>
<li>初始化缓冲区</li>
<li>执行算法主循环（<strong>核心是压缩函数</strong>）</li>
<li>输出</li>
</ol>
</li>
</ul>
<h2 id="SHA"><a href="#SHA" class="headerlink" title="SHA"></a>SHA</h2><p>安全哈希算法，是一个密码散列函数家族，主要适用于数学签名标准里面定义的数字签名算法。能计算出一个消息所对应的，固定长度的字符串（又称消息摘要）的算法。若输入的消息不同，它们对应不同字符串的机率很高。<br>SHA1的两个特性：</p>
<ol>
<li>不可以从消息摘要中复原信息</li>
<li>两个不同的消息不会产生同样的消息摘要</li>
</ol>
<h2 id="HMAC"><a href="#HMAC" class="headerlink" title="HMAC"></a>HMAC</h2><p>HAMC是一种基于密钥的保温完整性的验证方法，其安全性是建立在Hash加密算法基础上的。他要求通信双方共享密钥、约定算法、对报文进行Hash运算，形成固定长度的认证码。通信双方通过认证码的校验来确定报文的合法性。<br>HMAC是密钥相关的哈希运算消息认证码，HMAC运算利用哈希算法，以一个密钥和一个消息为输入，生成一个消息摘要作为输出。<br>HMAC算法的定义用数学公式表示如下：<br>HMAC（K，M）=H（（K’⊕opad）∣H（（K’⊕ipad）∣M））</p>
<h2 id="消息鉴别"><a href="#消息鉴别" class="headerlink" title="消息鉴别"></a>消息鉴别</h2><p>又称消息认证、报文认证，指的是通信双方对各自接受的消息进行验证，确定消息的一些属性是否真实的过程，如被验证的消息属性包括发送方的身份、接收方的身份、内容的完整性以及消息的顺序等等。</p>
<h2 id="口令安全存储"><a href="#口令安全存储" class="headerlink" title="口令安全存储"></a>口令安全存储</h2><p>为了防止黑客窃取存储在计算机中的用户账号，对于每一个账号，计算机不以明文方式存储口令，而是存储口令的报文摘要，如果某个账户的口令是PASS，则计算机中存储的是MD（PASS)。</p>
<h2 id="数字签名"><a href="#数字签名" class="headerlink" title="数字签名"></a>数字签名</h2><p>数字签名是某个报文的附加信息，是只有信息发送者才能产生的别人无法伪造的一段数字串。该附加信息一是能够证明签名者的真实性，二是能够证明签名者对该报文的确认。<br>数字签名的特征：</p>
<ol>
<li>接收者能够何时发送者对报文的数字签名</li>
<li>发送者事后无法否认对报文的数字签名</li>
<li>接受者无法伪造发送者对报文的数字签名</li>
</ol>
<hr>
<h1 id="第五讲（不考察）"><a href="#第五讲（不考察）" class="headerlink" title="第五讲（不考察）"></a>第五讲（不考察）</h1><hr>
<h1 id="第六讲-（不做重点考察）"><a href="#第六讲-（不做重点考察）" class="headerlink" title="第六讲 （不做重点考察）"></a>第六讲 （不做重点考察）</h1><h2 id="密钥管理"><a href="#密钥管理" class="headerlink" title="密钥管理"></a>密钥管理</h2><p>密钥管理是处理密钥从产生到最后销毁的整个过程中的有关问题，包括系统的初始化及密钥的产生、存储、备份/恢复、装入、分配、保护、更新、控制、丢失、撤销和销毁等内容。</p>
<h2 id="Diffie-Hellman密钥交换算法"><a href="#Diffie-Hellman密钥交换算法" class="headerlink" title="Diffie-Hellman密钥交换算法"></a>Diffie-Hellman密钥交换算法</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>使得两个用户安全地交换一个密钥以便于以后的报文加密。算法本身限于密钥交换的用途。</p>
<h3 id="有效性"><a href="#有效性" class="headerlink" title="有效性"></a>有效性</h3><p>算法的有效性依赖于计算有限域中离散对数的困难性。</p>
<h3 id="具体方法"><a href="#具体方法" class="headerlink" title="具体方法"></a>具体方法</h3><p><img src="/2021/07/05/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/Diffie-Hellman.PNG" alt="Diffie-Hellman示例"></p>
<hr>
<h1 id="第七讲"><a href="#第七讲" class="headerlink" title="第七讲"></a>第七讲</h1><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>防火墙是在两个网络之间执行访问控制策略的<strong>一个或者一组安全系统</strong>。它是一种计算机硬件和软件系统集合，是实现网络安全策略的有效工具之一，被广泛地应用在Internet和Internet之间。</p>
<h3 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h3><ol>
<li>保护脆弱和有缺陷的网络服务</li>
<li>集中化的安全管理</li>
<li>加强对网络系统的访问控制</li>
<li>加强隐私</li>
<li>对网络存取和访问进行监控审计<h3 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h3><img src="/2021/07/05/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E9%98%B2%E7%81%AB%E5%A2%99%E5%88%86%E7%B1%BB.PNG" alt="防火墙分类"><h4 id="按照软件、硬件划分"><a href="#按照软件、硬件划分" class="headerlink" title="按照软件、硬件划分"></a>按照软件、硬件划分</h4></li>
<li>软件防火墙</li>
<li>硬件防火墙</li>
<li>芯片级防火墙<h4 id="从防火墙技术分"><a href="#从防火墙技术分" class="headerlink" title="从防火墙技术分"></a>从防火墙技术分</h4></li>
<li>包过滤型</li>
<li>应用代理型<h4 id="从防火墙结构分"><a href="#从防火墙结构分" class="headerlink" title="从防火墙结构分"></a>从防火墙结构分</h4></li>
<li>单一主机防火墙</li>
<li>路由器集成防火墙</li>
<li>分布式防火墙<h4 id="从防火墙应用部署位置分"><a href="#从防火墙应用部署位置分" class="headerlink" title="从防火墙应用部署位置分"></a>从防火墙应用部署位置分</h4></li>
<li>边界防火墙</li>
<li>个人防火墙</li>
<li>混合式防火墙<h4 id="从防火墙性能分"><a href="#从防火墙性能分" class="headerlink" title="从防火墙性能分"></a>从防火墙性能分</h4></li>
<li>百兆级</li>
<li>千兆级</li>
<li>万兆级<h4 id="从技术分"><a href="#从技术分" class="headerlink" title="从技术分"></a>从技术分</h4></li>
<li>网络级防火墙</li>
<li>应用级防火墙</li>
</ol>
<h2 id="分组过滤器"><a href="#分组过滤器" class="headerlink" title="分组过滤器"></a>分组过滤器</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>在IP分组流中过滤掉具有特定属性的一组IP分组，这些属性可以是IP分组IP首部中的源和目的IP地址、传输层首部中的源和目的端口号等。</p>
<h3 id="无状态分组过滤器"><a href="#无状态分组过滤器" class="headerlink" title="无状态分组过滤器"></a>无状态分组过滤器</h3><p>无状态是指实施筛选和控制操作时，每一个IP分组都是独立的，不考虑IP分组之间的关联性。</p>
<h4 id="过滤规则"><a href="#过滤规则" class="headerlink" title="过滤规则"></a>过滤规则</h4><p>无状态分组过滤器通过规则从IP分组流中鉴别出一组IP分组，然后对其实施规定的操作，通常情况下的实施的操作有：正常转发和丢弃。<br>规则由一组属性值和操作组成，如果某个IP分组携带的信息和构成规则的一组属性值匹配，则意味着该IP分组和该规则匹配，对该IP分组实施规则指定的操作。<br>构成规则的属性值通常由下述字段组成：</p>
<ol>
<li>源IP地址</li>
<li>目的IP地址</li>
<li>源和目的端口号</li>
<li>协议类型<h4 id="两种过滤规则集设置方法"><a href="#两种过滤规则集设置方法" class="headerlink" title="两种过滤规则集设置方法"></a>两种过滤规则集设置方法</h4></li>
<li>黑名单</li>
<li>白名单<h3 id="有状态分组过滤器"><a href="#有状态分组过滤器" class="headerlink" title="有状态分组过滤器"></a>有状态分组过滤器</h3>有状态分组过滤器首先需要鉴别出属于同一会话的IP分组，然后根据会话的属性与状态对属于该会话的IP分组的网络间传输过程进行控制。这里的会话指的是两端之间的数据交换过程，因此，一个TCP连接属于一个会话，两个进程间的UDP报文传输过程属于一个会话，一个Internet控制报文协议(ICMP)ECHO请求和ECHO响应过程也是用一个会话。<h4 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h4>为了实现路由器R1接口1只允许输入输出与终端A发起访问Web服务器的操作有关的IP分组，禁止输入输出其他一切类型的IP分组的安全策略，必须做到以下几点：</li>
<li>只允许由终端A发起建立与Web服务器之间的TCP连接。</li>
<li>只允许属于由终端A发起建立的与Web服务器之间的TCP连接的TCP报文沿着Web服务器至终端A的方向传输。</li>
<li>必须在路由器R1接口1输入终端A发送给Web服务器的请求报文后，才允许路由器R1接口1输出Web服务器返回给终端A的响应报文。</li>
</ol>
<hr>
<h1 id="第8讲"><a href="#第8讲" class="headerlink" title="第8讲"></a>第8讲</h1><h2 id="传输层安全基本概念"><a href="#传输层安全基本概念" class="headerlink" title="传输层安全基本概念"></a>传输层安全基本概念</h2><p>传输层提供应用数据安全传输服务的协议，包括：安全套接字层（SSL）、传输层安全协议（TLS）以及SSL/TLS VPN。<br>在网络体系结构中，传输层的主要任务是为应用进程提供可靠的端（系统）到端（系统）的数据传输服务。<br>从通信和信号处理角度看，传输层属于通信部份的最高层。从网络功能或用户功能划分，侧传输层又属于用户功能中的最底层。<br>TCP/IP体系中包括两个最重要的传输层协议：用户数据报协议（UDP）和传输控制协议（TCP）</p>
<h2 id="端口、套接字"><a href="#端口、套接字" class="headerlink" title="端口、套接字"></a>端口、套接字</h2><h3 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h3><p>端口用于表示主机上的网络服务，不管是使用TCP协议还是UDP协议，都需要使用端口才能与其他服务通信。</p>
<h4 id="端口分类"><a href="#端口分类" class="headerlink" title="端口分类"></a>端口分类</h4><p>一类是由因特网指派名字和号码公司负责分配给一些常用的应用层程序固定使用的熟知端口，其数值一般为0~1023。<br><img src="/2021/07/05/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E7%86%9F%E7%9F%A5%E7%AB%AF%E5%8F%A3.PNG" alt="熟知端口"><br>另一类则是一般端口，用来随时分配给请求通信客户进程，对应端口号从1024到65535。</p>
<h3 id="套接字"><a href="#套接字" class="headerlink" title="套接字"></a>套接字</h3><p>一个套接字是一个二元组（IP地址，端口号）<br>一对套接字是一个四元组（本地IP地址，本地端口号，远程IP地址，远程端口号），可识别一条TCP连接，也可识别UDP连接。</p>
<h2 id="UDP协议"><a href="#UDP协议" class="headerlink" title="UDP协议"></a>UDP协议</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>UDP是无连接通信协议，提供的是不可靠的端到端数据传输服务。<br><img src="/2021/07/05/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/UDP.PNG" alt="UDP协议"><br>UDP位于IP层之上。应用程序访问UDP层然后使用IP层传输数据报。IP数据包的数据部分即为UDP数据报。IP层的报头指明了源主机和目的主机地址，而UDP层的报头指明了主机上的源端口和目的端口。</p>
<h3 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h3><ol>
<li>源端口：原端口号，占2字节。由于UDP协议提供的是不可靠的协议传输服务，所以不需要应答，因而UDP的源端口号是可选的，如果不用，设置为0.</li>
<li>目的端口：目的端口号，占2字节。</li>
<li>长度：UDP用户数据报的长度（包括首部和数据部分在内的总的字节数），占2字节。最小值为8。（数据报中只有固定的首部，没有数据）</li>
<li>校验和：防止UDP数据报在传输中出错，占2字节。由于UDP不保证可靠性，所以该字段是可选的。（UDP协议使用报头中的校验值来保证数据的安全）</li>
</ol>
<h2 id="TCP协议"><a href="#TCP协议" class="headerlink" title="TCP协议"></a>TCP协议</h2><h3 id="基本概念-1"><a href="#基本概念-1" class="headerlink" title="基本概念"></a>基本概念</h3><p>与UDP不同，TCP协议是面向连接的，提供可靠、有序的端到端数据传输服务。<br><img src="/2021/07/05/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/TCP.PNG" alt="TCP报文格式"></p>
<h3 id="基本设置-1"><a href="#基本设置-1" class="headerlink" title="基本设置"></a>基本设置</h3><ol>
<li>来源连接端口（16位长）——识别发送连接端口</li>
<li>目的连接端口（16位长）——识别接受连接端口</li>
<li>序列号（seq，32位长）</li>
<li>确认号（ack，32位长）——期望收到的数据的开始序列号。也即已经收到的数据的字节长度加1。</li>
<li>数据偏移（4位长）——以4字节为单位计算出的数据段开始地址的偏移值。</li>
<li>保留（3比特长）——需置为0.</li>
<li><strong>标志符</strong>（9比特长）</li>
<li>窗口（WIN，16位长）——表示从确认号开始，本报文的发送方可以接受的字节数，即接收窗口大小。用于流量控制。</li>
<li>检验和（CheckSum，16位长）——对整个TCP报文段，包括TCP头部和TCP数据，以16位字进行计算所得。这是一个强制性的字段。</li>
<li>紧急指针（16位长）——本报文段中的紧急数据的最后一个字节的序号。</li>
<li>选项字段——最多40字节。每个选项的开始是1字节的kind字段，说明选项的类型。<h3 id="TCP连接有关的控制比特（标志位）："><a href="#TCP连接有关的控制比特（标志位）：" class="headerlink" title="TCP连接有关的控制比特（标志位）："></a>TCP连接有关的控制比特（标志位）：</h3></li>
<li>确认位（ACK）</li>
<li>复位号（RST）</li>
<li>同步位（SYN）：当SYN=1而ACK=0时，表明这是一个连接请求报文段。对方若同意建立连接，则应在响应的报文段中使SYN=1和ACK=1.</li>
<li>终止位（FIN）</li>
</ol>
<h2 id="VPN"><a href="#VPN" class="headerlink" title="VPN"></a>VPN</h2><p>虚拟专网：是指物理上分布在不同地点的网络通过公用网络连接而构成逻辑上的虚拟子网。</p>
<h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><ol>
<li>费用低</li>
<li>安全保障</li>
<li>质量保证（QoS)</li>
<li>可扩充性和灵活性</li>
<li>可管理性<h3 id="分类-3"><a href="#分类-3" class="headerlink" title="分类"></a>分类</h3></li>
<li>网关-网关VPN</li>
<li>远程访问VPN<h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3></li>
<li>隧道技术</li>
<li>加/解密技术</li>
<li>密钥管理技术</li>
<li>身份认证技术</li>
<li>访问控制</li>
</ol>
<h2 id="隧道协议"><a href="#隧道协议" class="headerlink" title="隧道协议"></a>隧道协议</h2><p>指通过一个公用网络（通常是Internet）建立的一条穿过公用网络的安全的、逻辑上的隧道。在隧道中，数据包被重新封装发送。</p>
<h3 id="VPN的主要封装协议"><a href="#VPN的主要封装协议" class="headerlink" title="VPN的主要封装协议"></a>VPN的主要封装协议</h3><ol>
<li>第二层的隧道协议：包括PPTP、L2TP、L2F等</li>
<li>第三层的隧道协议：包括IPSec、GRE等</li>
</ol>
<h2 id="IPSec-VPN"><a href="#IPSec-VPN" class="headerlink" title="IPSec VPN"></a>IPSec VPN</h2><p>IPSec协议使用认证头标AH和封装安全净载ESP两种安全协议来提供安全通信。两种安全协议都分为隧道模式和传输模式。<br>传输模式用在主机到主机的通信，隧道模式用在其它任何方式的通信。</p>
<h3 id="工作原理-1"><a href="#工作原理-1" class="headerlink" title="工作原理"></a>工作原理</h3><p>IPSec的工作原理类似于包过滤防火墙，可以把它看做是包过滤防火墙的一种扩展。<br>IPSec网关通过查询安全策略数据库（SPD）决定对接收到的IP数据包进行转发、丢弃或IPSec处理。<br>IPSec网关可以对IP数据包只进行加密或认证，也可以对数据包同时实施加密和认证。<br>采用传输模式时，IPSec只对IP数据包的净荷进行加密或认证。<br>封装数据包<strong>继续使用原IP头部，只对部分域进行修改。</strong><br>而<strong>IPSec协议头部插入到原IP头部和传送层头部之间。</strong><br>采用隧道模式时，<strong>IPSec对整个IP数据包进行加密或认证。</strong><br>产生一个<strong>新的IP头</strong>，<strong>IPSec头</strong>被放在新IP头和原IP数据包之间，组成一<strong>新IP头</strong>。</p>
<h2 id="TLS-VPN"><a href="#TLS-VPN" class="headerlink" title="TLS VPN"></a>TLS VPN</h2><p><img src="/2021/07/05/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/TLS%E5%92%8CIPSec.PNG" alt="TLS和IPSes的比较"></p>
<h3 id="工作原理-2"><a href="#工作原理-2" class="headerlink" title="工作原理"></a>工作原理</h3><p>TLS VPN的实现主要依靠下面三种协议的支持：</p>
<ol>
<li>握手协议</li>
<li>TLS记录协议</li>
<li>警告协议<h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3></li>
<li>电子邮件</li>
<li>内部网页浏览</li>
<li>其他基于Web的查询工作</li>
</ol>
<h2 id="PPTP-VPN"><a href="#PPTP-VPN" class="headerlink" title="PPTP VPN"></a>PPTP VPN</h2><h3 id="工作原理-3"><a href="#工作原理-3" class="headerlink" title="工作原理"></a>工作原理</h3><p>建立PPTP连接</p>
<ol>
<li>首先需要建立客户端与本地ISP的PPP连接</li>
<li>成功接入Internet,再就是建立PPTP连接。</li>
<li>从最顶端的PPP客户端，PAC和PNS服务器之间开始，由已安装好PPTP的PAC建立并管理PPTP任务。</li>
</ol>
<hr>
<h1 id="第九讲"><a href="#第九讲" class="headerlink" title="第九讲"></a>第九讲</h1><h2 id="Web-应用体系结构脆弱性分析"><a href="#Web-应用体系结构脆弱性分析" class="headerlink" title="Web 应用体系结构脆弱性分析"></a>Web 应用体系结构脆弱性分析</h2><h3 id="Web客户端的脆弱性"><a href="#Web客户端的脆弱性" class="headerlink" title="Web客户端的脆弱性"></a>Web客户端的脆弱性</h3><ol>
<li>Web客户端，即浏览器，是Web应用体系中重要的一环</li>
<li>它负责将网站返回的页面展现给浏览器用户，并将用户输入的数据传输给服务器。</li>
<li>浏览器的安全性直接影响到客户端主机的安全。</li>
<li>利用浏览器漏洞渗透目标主机已经成为主流的攻击方式。</li>
<li>目前应用最广的IE浏览器被爆出大量的安全漏洞，是攻击者的首选目标。<h3 id="Web服务器的脆弱性"><a href="#Web服务器的脆弱性" class="headerlink" title="Web服务器的脆弱性"></a>Web服务器的脆弱性</h3></li>
<li>Web应用程序在Web服务器上运行</li>
<li>Web服务器的安全直接影响到服务器主机和Web应用程序的安全</li>
<li>流行的IIS服务器、Apache服务器、Tomcat服务器均被爆出过很多严重的安全漏洞</li>
<li>攻击者通过这些漏洞，不仅可以对目标主机发起拒绝服务攻击，严重的还能获得目标系统的管理员权限、数据库访问权限，从而窃取大量有用信息<h3 id="Web应用程序的脆弱性"><a href="#Web应用程序的脆弱性" class="headerlink" title="Web应用程序的脆弱性"></a>Web应用程序的脆弱性</h3></li>
<li>Web应用程序是用户编写的网络应用程序，可能存在安全漏洞。（网络攻击事件中，有很大一部分是由于Web应用程序的安全漏洞引起的）</li>
<li>编写代码时没有考虑安全因素，因此开发出来的应用程序存在安全隐患</li>
<li>Web应用编程语言的种类多、灵活性高，一般程序员不易深入理解及正确利用，导致使用这些语言不规范，留下安全漏洞</li>
</ol>
<h2 id="SQL注入攻击及防范"><a href="#SQL注入攻击及防范" class="headerlink" title="SQL注入攻击及防范"></a>SQL注入攻击及防范</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><p>SQL注入攻击<strong>通过构建特殊的输入作为参数</strong>传入Web应用程序，而这些输入大都是SQL语法里的一些组合，通过执行SQL语句进而执行攻击者所要的操作，它目前是黑客对数据库进行攻击的最常用手段之一。<br>SQL注入攻击以<strong>网站数据库为目标</strong>，利用<strong>Web应用程序对特殊字符串过滤分完全的缺陷</strong>，通过把<strong>精心构造的SQL命令插入到Web表单递交或输入域名或页面请求的查询字符串中</strong>，欺骗<strong>服务器执行恶意的SQL命令</strong>，最终达到非法访问网站数据库内容、篡改数据库中的数据、绕过认证（不需要掌握用户名和口令就可登录应用程序）、运行程序、浏览或编辑文件等目的。</p>
<h3 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h3><ol>
<li>过滤单引号</li>
<li>在构造动态SQL语句时，一定要使用类安全（type-safe）的参数编码机制。 </li>
<li>禁止将敏感性数据以明文存放在数据库中，这样即使数据库被SQL注入漏洞攻击，也会减少泄密的风险</li>
<li>遵循最小特权原则。只给访问数据库的Web应用所需的最低权限，撤销不必要的公共许可，使用强大的加密技术来保护敏感数据并维护审查跟踪，并确保数据库打了最新补丁</li>
<li>尽量不要使用动态拼装的SQL，可以使用参数化的SQL或者直接使用存储过程进行数据查询存取</li>
<li>应用的异常信息应该给出尽可能少的提示，因为黑客们可以利用这些消息来实现SQL注入攻击。因此，最后使用自定义的错误信息对原始信息进行包装，把异常信息存放在独立的表中</li>
</ol>
<h2 id="跨站脚本攻击（XXS"><a href="#跨站脚本攻击（XXS" class="headerlink" title="跨站脚本攻击（XXS)"></a>跨站脚本攻击（XXS)</h2><h3 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h3><p>跨站脚本攻击是指攻击者利用Web程序对用户输入过滤不足的缺陷，把恶意代码（包括HTML代码和客户端脚本）注入到其他用户浏览器显示的页面上执行，从而窃取用户的敏感信息、伪造用户身份进行恶意行为的一种攻击方式。</p>
<h4 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h4><ol>
<li>盗取各类账号</li>
<li>控制企业数据</li>
<li>盗窃企业重要的具有商业价值的资料</li>
<li>非法转账</li>
<li>强制发生电子邮件</li>
<li>网站挂马</li>
<li>控制受害者机器向其他网站发起攻击<h3 id="需要的前提"><a href="#需要的前提" class="headerlink" title="需要的前提"></a>需要的前提</h3></li>
<li>Web程序必须接受用户的输入</li>
<li>Web程序必须重新显示用户输入的内容<h3 id="工作原理-4"><a href="#工作原理-4" class="headerlink" title="工作原理"></a>工作原理</h3>输入插入包含有JavaScript或其他恶意脚本的HTML标签代码。<br>问题的根源：不当的服务器端输入检查，从而允许用户输入可被客户端浏览器解释的脚本命令。<h3 id="主要形式"><a href="#主要形式" class="headerlink" title="主要形式"></a>主要形式</h3></li>
<li>反射式跨站脚本攻击</li>
<li>储存式跨站脚本攻击</li>
<li>DOM式跨站脚本攻击<h3 id="防御-1"><a href="#防御-1" class="headerlink" title="防御"></a>防御</h3></li>
<li>对Web应用程序的所有输入进行<strong>过滤</strong>，对危险的HTML字符进行<strong>编码</strong></li>
<li>对用户进行培训</li>
<li>防止访问已知的恶意网站</li>
<li>执行手工或自动化代码扫描，确定并消除潜在的XSS漏洞</li>
</ol>
<h2 id="Cookie欺骗及防范"><a href="#Cookie欺骗及防范" class="headerlink" title="Cookie欺骗及防范"></a>Cookie欺骗及防范</h2><h3 id="安全隐患"><a href="#安全隐患" class="headerlink" title="安全隐患"></a>安全隐患</h3><ol>
<li>Cookie信息保存在用户端，因此可以对Cookie信息进行修改。</li>
<li>伪造Cookie信息，绕过网站的验证过程，不需要输入密码，就可以登陆网站，甚至进入网站管理后台。</li>
<li>Cookie中保存了用户名、口令以及权限信息而留下安全隐患<h3 id="安全原则"><a href="#安全原则" class="headerlink" title="安全原则"></a>安全原则</h3>一般情况下，网站会话管理机制仅讲会话ID保存至Cookie，而将数据本身保存在Web服务器的内存或文件、数据库中。</li>
</ol>
<h2 id="跨站请求伪造（CSRF）"><a href="#跨站请求伪造（CSRF）" class="headerlink" title="跨站请求伪造（CSRF）"></a>跨站请求伪造（CSRF）</h2><h3 id="概述-3"><a href="#概述-3" class="headerlink" title="概述"></a>概述</h3><p>跨站请求伪造是指攻击者假冒受信任用户向第三方网站发送恶意请求，如交易转账、发邮件、发布网站、更改邮箱密码或者邮箱地址等。<br>与XSS的差别在于：XSS利用的是网站内的信任用户，而CSRF则是通过伪造来自受信任用户的请求来利用受信任的网站。</p>
<h3 id="攻击原理-2"><a href="#攻击原理-2" class="headerlink" title="攻击原理"></a>攻击原理</h3><p><img src="/2021/07/05/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/CSRF.PNG" alt="CSRF攻击原理图"></p>
<h3 id="Web应用存在的两个特性"><a href="#Web应用存在的两个特性" class="headerlink" title="Web应用存在的两个特性"></a>Web应用存在的两个特性</h3><ol>
<li>form元素的action属性能够指定任意域名的URL，使得即使是恶意网站也能向攻击目标发送请求。</li>
<li>网站浏览器会将保存在Cookie中的会话ID自动发送给目标网站，使得即使请求是通过恶意网站发起的，Cookie中的会话ID值也会照样发送给目标网站，从而导致攻击请求在正常认证状态下被发送。<h3 id="防御-2"><a href="#防御-2" class="headerlink" title="防御"></a>防御</h3></li>
<li>设定短暂的可信用户会话时间，完成任务后记得退出可信会话，删除所有Cookie</li>
<li>每次提出一个可信行为时，对发出请求的用户进行验证</li>
<li>让网站记住登录用户名和密码时要小心。留在客户端的登录信息可能会攻击者加以利用</li>
<li>在URL和表单中增加的每个请求，必须提供基础会话令牌以外的每个请求用户验证</li>
<li>从Web应用中删除所有XSS漏洞  </li>
<li>嵌入机密信息（令牌）</li>
<li>再次认证（输入密码）</li>
<li>检查Referer</li>
</ol>
<hr>
<h1 id="第十讲"><a href="#第十讲" class="headerlink" title="第十讲"></a>第十讲</h1><h2 id="域名系统（DNS）"><a href="#域名系统（DNS）" class="headerlink" title="域名系统（DNS）"></a>域名系统（DNS）</h2><h3 id="概述-4"><a href="#概述-4" class="headerlink" title="概述"></a>概述</h3><p>域名系统是互联网的一项服务。他作为将<strong>域名</strong>和<strong>IP地址</strong>相互映射的一个分布式数据库，能够使人更方便地访问互联网。<br>域名解析就是域名到IP地址地转换过程。域名地解析工作由DNS服务器完成。</p>
<h3 id="其他作用"><a href="#其他作用" class="headerlink" title="其他作用"></a>其他作用</h3><ol>
<li>应用层路由</li>
<li>DNS作为受信任的基础</li>
<li>DNS作为公钥基础设施<h3 id="域名结构"><a href="#域名结构" class="headerlink" title="域名结构"></a>域名结构</h3></li>
<li>域名结构由若干个分量组成，每个分量之间用英文小数点隔开。</li>
<li>各分量分别代表不同级别的域名。</li>
<li>域名系统不规定一个域名包含多少个下级域名，不规定每一级域名代表什么意思</li>
<li>每一级域名都有英文字母和数字组成（不超过63个字符，且不区分大小写）</li>
<li>最后一个“.”的右边部分是顶级域名（<strong>TLD，也成为一级域名，域名后缀</strong>），5. 最后一个“.”的左边部分是二级域名，以此类推</li>
<li>完整的域名不超过255个字符</li>
<li>各级域名由其上一级域名机构管理机制管理，而最高级则由因特网的有关机构管理</li>
</ol>
<h2 id="DNS面临的安全威胁"><a href="#DNS面临的安全威胁" class="headerlink" title="DNS面临的安全威胁"></a>DNS面临的安全威胁</h2><h3 id="脆弱性"><a href="#脆弱性" class="headerlink" title="脆弱性"></a>脆弱性</h3><p><img src="/2021/07/05/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/DNS%E8%84%86%E5%BC%B1%E6%80%A7.PNG" alt="DNS脆弱性"></p>
]]></content>
  </entry>
</search>
